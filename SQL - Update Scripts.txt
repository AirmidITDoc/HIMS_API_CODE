
alter table [VATSALYA_28_MARCH_NEW].dbo.Menumaster
add [PermissionCode] [nvarchar](50) NULL,
	[TableNames] [nvarchar](max) NULL
	
	
UPDATE a
SET a.PermissionCode = (
    SELECT b.PermissionCode
    FROM [SSWEB_AIRMID].dbo.Menumaster b
    WHERE b.Id = a.Id
)
FROM [VATSALYA_28_MARCH_NEW].dbo.Menumaster a

UPDATE a
SET a.TableNames = (
    SELECT b.TableNames
    FROM [SSWEB_AIRMID].dbo.Menumaster b
    WHERE b.Id = a.Id
)
FROM [VATSALYA_28_MARCH_NEW].dbo.Menumaster a


Alter table loginManager
add [CreatedBy] [int] NULL,
	[CreatedDate] [datetime] NULL,
	[ModifiedBy] [int] NULL,
	[ModifiedDate] [datetime] NULL
	
Update loginManager set [CreatedBy] =1 ,[CreatedDate]= getdate(), [ModifiedBy]=1,[ModifiedDate]=getdate()

CREATE TABLE [dbo].[AuditLog](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ActionId] [int] NOT NULL,
	[ActionById] [bigint] NULL,
	[ActionByName] [nvarchar](250) NULL,
	[EntityId] [int] NULL,
	[EntityName] [nvarchar](250) NULL,
	[Description] [nvarchar](max) NULL,
	[AdditionalInfo] [nvarchar](max) NULL,
	[LogTypeId] [int] NOT NULL,
	[LogSourceId] [int] NOT NULL,
	[CreatedOn] [datetime] NOT NULL,
 CONSTRAINT [PK_AuditLog] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[AuditLog] ADD  CONSTRAINT [DF_AuditLog_CreatedOn]  DEFAULT (getdate()) FOR [CreatedOn]
GO


alter table PermissionMaster add IsExport bit
Update PermissionMaster set IsExport=0

Drop PROCEDURE [dbo].[Insert_Permission]    

/****** Object:  UserDefinedTableType [dbo].[Permission]    Script Date: 4/22/2025 3:05:12 PM ******/
DROP TYPE [dbo].[Permission]
GO

/****** Object:  UserDefinedTableType [dbo].[Permission]    Script Date: 4/22/2025 3:05:12 PM ******/
CREATE TYPE [dbo].[Permission] AS TABLE(
	[RoleID] [int] NULL,
	[MenuId] [int] NULL,
	[IsView] [bit] NULL,
	[IsAdd] [bit] NULL,
	[IsEdit] [bit] NULL,
	[IsDelete] [bit] NULL,
	[IsExport] [bit] NULL
)
GO
  
  
-- =============================================    
-- Author:  <Author,,Name>    
-- Create date: <Create Date,,>    
-- Description: <Description,,>    
-- =============================================    
  
CREATE PROCEDURE [dbo].[Insert_Permission]    
@tbl dbo.Permission READONLY    
AS    
BEGIN    
 SET NOCOUNT ON;    
 DECLARE @RoleId INT=(SELECT Top 1 RoleId FROM @tbl)    
 DELETE FROM PermissionMaster WHERE RoleId=@RoleId    
 INSERT INTO PermissionMaster(RoleId,MenuId,IsAdd,IsEdit,IsDelete,IsView,IsExport)    
 SELECT RoleID,MenuId,IsAdd,IsEdit,IsDelete,IsView,IsExport FROM @tbl    
 --SELECT * FROM @tbl    
END 

======================================= *************************************************************************************************

alter table DB_PrefixMaster add [CreatedBy] [int] NULL,	[CreatedDate] [datetime] NULL,	[ModifiedBy] [int] NULL,	[ModifiedDate] [datetime] NULL
alter table DB_GenderMaster add [CreatedBy] [int] NULL,	[CreatedDate] [datetime] NULL,	[ModifiedBy] [int] NULL,	[ModifiedDate] [datetime] NULL
alter table PatientTypeMaster add [CreatedBy] [int] NULL,	[CreatedDate] [datetime] NULL,	[ModifiedBy] [int] NULL,	[ModifiedDate] [datetime] NULL
alter table DoctorTypeMaster add [CreatedBy] [int] NULL,	[CreatedDate] [datetime] NULL,	[ModifiedBy] [int] NULL,	[ModifiedDate] [datetime] NULL
alter table ClassMaster add [CreatedBy] [int] NULL,	[CreatedDate] [datetime] NULL,	[ModifiedBy] [int] NULL,	[ModifiedDate] [datetime] NULL
alter table DoctorMaster add [CreatedBy] [int] NULL,	[CreatedDate] [datetime] NULL,	[ModifiedBy] [int] NULL,	[ModifiedDate] [datetime] NULL
alter table HospitalMaster add IsActive bit , [CreatedBy] [int] NULL,	[CreatedDate] [datetime] NULL,	[ModifiedBy] [int] NULL,	[ModifiedDate] [datetime] NULL
alter table M_CityMaster add [CreatedBy] [int] NULL, [CreatedDate] [datetime] NULL,	[ModifiedBy] [int] NULL,	[ModifiedDate] [datetime] NULL
alter table M_DepartmentMaster add IsActive bit, [CreatedBy] [int] NULL,	[CreatedDate] [datetime] NULL,	[ModifiedBy] [int] NULL,	[ModifiedDate] [datetime] NULL
alter table M_ConcessionReasonMaster add IsActive bit, [CreatedBy] [int] NULL,	[CreatedDate] [datetime] NULL,	[ModifiedBy] [int] NULL,	[ModifiedDate] [datetime] NULL
alter table M_BankMaster add IsActive bit, [CreatedBy] [int] NULL,	[CreatedDate] [datetime] NULL,	[ModifiedBy] [int] NULL,	[ModifiedDate] [datetime] NULL
alter table ClassMaster add ClassRate float

ALTER TABLE DB_PrefixMaster ALTER COLUMN IsActive Bit;
ALTER TABLE ClassMaster ALTER COLUMN IsActive Bit;
ALTER TABLE DoctorTypeMaster ALTER COLUMN IsActive Bit;


Update DB_PrefixMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update DB_GenderMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update DoctorTypeMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update ClassMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update DoctorMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update HospitalMaster set IsActive=1 , CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_CityMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_StateMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_CountryMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_DepartmentMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_ConcessionReasonMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update PatientTypeMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_BankMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()


----------------------------------------------------- Ashutosh ----------------------------------------------------------

ALTER TABLE M_MaritalStatusMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL, [ModifiedDate] [datetime] NULL
ALTER TABLE M_MaritalStatusMaster
ADD [IsActive] [bit] NULL,
[CreatedBy] [int] NULL,
	[CreatedDate] [datetime] NULL,
	[ModifiedBy] [int] NULL,
	[ModifiedDate] [datetime] NULL
go
ALTER TABLE M_RelationshipMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_ReligionMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE  M_CountryMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,
	[ModifiedDate] [datetime] NULL
go

ALTER TABLE   M_StateMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,
	[ModifiedDate] [datetime] NULL
go

ALTER TABLE    M_CityMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,
	[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_TalukaMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,
	[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_AreaMaster ADD[CityId] [int] NULL,[IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,
	[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_BankMaster ADD[IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,
	[ModifiedDate] [datetime] NULL
go

ALTER TABLE CashCounter ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
ALTER TABLE ClassMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE TariffMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE GroupMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
ALTER TABLE     ClassMaster
ADD[IsActive] [bit] NULL,
[CreatedBy] [int] NULL,
	[CreatedDate] [datetime] NULL,
	[ModifiedBy] [int] NULL,
	[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_SubGroupMaster ADD[IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,
[ModifiedDate] [datetime] NULL
go

ALTER TABLE ServiceMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE CompanyTypeMaster ADD[IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE CompanyMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_SubTPACompanyMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_BankMaster ADD[IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE  DoctorTypeMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE locationmaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE Bedmaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
ALTER TABLE     DoctorTypeMaster
ADD[IsActive] [bit] NULL,
[CreatedBy] [int] NULL,
	[CreatedDate] [datetime] NULL,
	[ModifiedBy] [int] NULL,
	[ModifiedDate] [datetime] NULL
go

ALTER TABLE DischargeTypemaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_GenericMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_DrugMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_DoseMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_CertificateMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,
[ModifiedDate] [datetime] NULL
ALTER TABLE     M_DrugMaster
ADD [IsActive] [bit] NULL,
[CreatedBy] [int] NULL,
	[CreatedDate] [datetime] NULL,
	[ModifiedBy] [int] NULL,
	[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_instructionmaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_ItemCategoryMaster ADD [IsActive] [bit] NULL, [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_PathParameterMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,
[ModifiedDate] [datetime] NULL
ALTER TABLE     M_instructionmaster
ADD [IsActive] [bit] NULL,
[CreatedBy] [int] NULL,
	[CreatedDate] [datetime] NULL,
	[ModifiedBy] [int] NULL,
	[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_pathcategorymaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,
[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_radiology_Templatemaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
ALTER TABLE M_radiologyTestmaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,
[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_ModeOfDischarge ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
ALTER TABLE M_Departmentmaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
ALTER TABLE RoomMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
ALTER TABLE M_pathunitmaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
ALTER TABLE M_Templatemaster ADD [Category] [Nvarchar] NULL, [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
ALTER TABLE M_pathtestmaster ADD [TestTime] [datetime] NULL,[TestDate] [datetime] NULL, [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go


ALTER TABLE M_radiology_Templatemaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL











Update  M_MaritalStatusMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update  M_RelationshipMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update  M_ReligionMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update  M_CountryMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update  M_StateMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update  M_CityMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update  M_TalukaMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update  M_AreaMaster set CityId=1, IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_BankMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update CashCounter set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update  ClassMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update  TariffMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update GroupMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_SubGroupMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update ServiceMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update CompanyTypeMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update CompanyMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_SubTPACompanyMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_BankMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update DoctorTypeMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update locationmaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update Bedmaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update DischargeTypemaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_GenericMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_DrugMaster set IsActive=1, CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_DoseMaster set  CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_CertificateMaster set IsActive=1, CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_instructionmaster set IsActive=1, CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_ItemCategoryMaster set IsActive=1, CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_PathParameterMaster set IsActive=1, CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_pathcategorymaster set IsActive=1, CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_radiology_Templatemaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_radiologyTestmaster set IsActive=1, CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_ModeOfDischarge set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_Departmentmaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update RoomMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_pathunitmaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

Update M_Templatemaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_pathtestmaster set TestTime=getdate(),TestDate=getdate(), IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()


create sp---> m_Rtrv_ItemMaster_by_Name_Pagi
      
CREATE  proc [dbo].[m_Rtrv_ItemMaster_by_Name_Pagi]                      
(                          
@ItemName nvarchar(200) ,              
@StoreID Bigint  ,          
@Start INT,                
@Length INT                               
)                          
          
as                          
IF @ItemName = '%'                                      
 SET @ItemName = NULL          
              
IF @StoreID = 0                                     
 SET @StoreID = NULL                              
          
Begin                                    
          
 SET NOCOUNT ON;                                
      
               
    SELECT COUNT(1) total_row                    
    From    dbo.M_ItemMaster INNER JOIN        
        dbo.M_AssignItemToStore ON dbo.M_ItemMaster.ItemID = dbo.M_AssignItemToStore.ItemId INNER JOIN        
        dbo.M_StoreMaster ON dbo.M_AssignItemToStore.StoreId = dbo.M_StoreMaster.StoreId LEFT OUTER JOIN        
        dbo.M_ItemTypeMaster ON dbo.M_ItemMaster.ItemTypeID = dbo.M_ItemTypeMaster.ItemTypeId LEFT OUTER JOIN        
        dbo.M_CurrencyMaster ON dbo.M_ItemMaster.CurrencyId = dbo.M_CurrencyMaster.CurrencyId LEFT OUTER JOIN        
        dbo.M_UnitofMeasurementMaster AS M_UnitofMeasurementMaster_1 ON         
        dbo.M_ItemMaster.StockUOMId = M_UnitofMeasurementMaster_1.UnitofMeasurementId LEFT OUTER JOIN        
        dbo.M_UnitofMeasurementMaster ON dbo.M_ItemMaster.PurchaseUOMId = dbo.M_UnitofMeasurementMaster.UnitofMeasurementId LEFT OUTER JOIN        
        dbo.M_ItemCategoryMaster ON dbo.M_ItemMaster.ItemCategaryId = dbo.M_ItemCategoryMaster.ItemCategoryId LEFT OUTER JOIN        
        dbo.M_ItemClassMaster ON dbo.M_ItemMaster.ItemClassId = dbo.M_ItemClassMaster.ItemClassId LEFT OUTER JOIN        
        dbo.M_ItemGenericNameMaster ON dbo.M_ItemMaster.ItemGenericNameId = dbo.M_ItemGenericNameMaster.ItemGenericNameId          
    WHERE  (dbo.M_ItemMaster.ItemName LIKE COALESCE (@ItemName, dbo.M_ItemMaster.ItemName))      
      
      
 SELECT dbo.M_ItemMaster.ItemID, dbo.M_ItemMaster.ItemShortName, dbo.M_ItemMaster.ItemName, dbo.M_ItemTypeMaster.ItemTypeName,         
        dbo.M_ItemMaster.ItemTypeID, dbo.M_ItemMaster.ItemCategaryId, dbo.M_ItemCategoryMaster.ItemCategoryName, dbo.M_ItemMaster.ItemClassId,         
        dbo.M_ItemClassMaster.ItemClassName, dbo.M_ItemMaster.ItemGenericNameId, dbo.M_ItemGenericNameMaster.ItemGenericName,         
        dbo.M_ItemMaster.PurchaseUOMId, dbo.M_UnitofMeasurementMaster.UnitofMeasurementName AS PuchaseUOM, dbo.M_ItemMaster.StockUOMId,         
        M_UnitofMeasurementMaster_1.UnitofMeasurementName AS StockUOM, dbo.M_ItemMaster.ConversionFactor, dbo.M_ItemMaster.CurrencyId,         
        dbo.M_CurrencyMaster.CurrencyName, dbo.M_ItemMaster.TaxPer, dbo.M_ItemMaster.IsActive,       
        dbo.M_ItemMaster.Addedby,           
        dbo.M_ItemMaster.IsBatchRequired, dbo.M_ItemMaster.MinQty, dbo.M_ItemMaster.MaxQty, dbo.M_ItemMaster.ReOrder,         
        dbo.M_StoreMaster.StoreName, dbo.M_AssignItemToStore.StoreId, dbo.M_ItemMaster.HSNcode, dbo.M_ItemMaster.CGST, dbo.M_ItemMaster.SGST,         
        dbo.M_ItemMaster.IGST, dbo.M_ItemMaster.ManufId, dbo.M_ItemMaster.IsNarcotic, dbo.M_ItemMaster.ProdLocation, dbo.M_ItemMaster.IsH1Drug,         
        dbo.M_ItemMaster.IsScheduleH, dbo.M_ItemMaster.IsHighRisk, dbo.M_ItemMaster.IsScheduleX, dbo.M_ItemMaster.IsLASA,         
        dbo.M_ItemMaster.IsEmgerency, dbo.M_ItemMaster.DrugType, dbo.M_ItemMaster.DrugTypeName,        
     ItemCompnayId        
 FROM         dbo.M_ItemMaster INNER JOIN        
        dbo.M_AssignItemToStore ON dbo.M_ItemMaster.ItemID = dbo.M_AssignItemToStore.ItemId INNER JOIN        
        dbo.M_StoreMaster ON dbo.M_AssignItemToStore.StoreId = dbo.M_StoreMaster.StoreId LEFT OUTER JOIN        
        dbo.M_ItemTypeMaster ON dbo.M_ItemMaster.ItemTypeID = dbo.M_ItemTypeMaster.ItemTypeId LEFT OUTER JOIN        
        dbo.M_CurrencyMaster ON dbo.M_ItemMaster.CurrencyId = dbo.M_CurrencyMaster.CurrencyId LEFT OUTER JOIN        
        dbo.M_UnitofMeasurementMaster AS M_UnitofMeasurementMaster_1 ON         
        dbo.M_ItemMaster.StockUOMId = M_UnitofMeasurementMaster_1.UnitofMeasurementId LEFT OUTER JOIN        
        dbo.M_UnitofMeasurementMaster ON dbo.M_ItemMaster.PurchaseUOMId = dbo.M_UnitofMeasurementMaster.UnitofMeasurementId LEFT OUTER JOIN        
        dbo.M_ItemCategoryMaster ON dbo.M_ItemMaster.ItemCategaryId = dbo.M_ItemCategoryMaster.ItemCategoryId LEFT OUTER JOIN        
        dbo.M_ItemClassMaster ON dbo.M_ItemMaster.ItemClassId = dbo.M_ItemClassMaster.ItemClassId LEFT OUTER JOIN        
        dbo.M_ItemGenericNameMaster ON dbo.M_ItemMaster.ItemGenericNameId = dbo.M_ItemGenericNameMaster.ItemGenericNameId        
 WHERE     (dbo.M_ItemMaster.ItemName LIKE COALESCE (@ItemName, dbo.M_ItemMaster.ItemName)) AND         
        (dbo.M_AssignItemToStore.StoreId LIKE COALESCE (@StoreID, dbo.M_AssignItemToStore.StoreId))        
    ORDER BY ItemID DESC       
 OFFSET (@Start*@Length)+0 ROWS                
    FETCH NEXT @Length ROWS ONLY       
End 
 

create SP--->m_Rtrv_SupplierMasterList_by_Name


CREATE proc [dbo].[m_Rtrv_SupplierMasterList_by_Name]            
(            
@SupplierName Varchar(100),          
@StoreID Bigint,  
@Start INT,      
@Length INT      
)            
as            
IF @SupplierName = '%'                        
 SET @SupplierName = NULL                
      
IF @StoreID = 0                                 
 SET @StoreID = NULL              
      
Begin                      
      
      
 SET NOCOUNT ON;    
     SELECT COUNT(*) total_row          
   
 FROM            M_SupplierMaster INNER JOIN      
                         M_CityMaster ON M_SupplierMaster.CityId = M_CityMaster.CityId INNER JOIN      
                         M_CountryMaster ON M_SupplierMaster.CountryId = M_CountryMaster.CountryId INNER JOIN      
                         M_StateMaster ON M_SupplierMaster.StateId = M_StateMaster.StateId INNER JOIN      
                         M_AssignSupplierToStore ON M_SupplierMaster.SupplierId = dbo.M_AssignSupplierToStore.SupplierId      
WHERE        (M_SupplierMaster.SupplierName LIKE COALESCE (@SupplierName, M_SupplierMaster.SupplierName)) AND (M_AssignSupplierToStore.StoreId LIKE COALESCE (@StoreID, M_AssignSupplierToStore.StoreId))      
  
      
SELECT        M_SupplierMaster.SupplierId, M_SupplierMaster.SupplierName, M_SupplierMaster.ContactPerson, M_SupplierMaster.Address, M_SupplierMaster.CityId, M_SupplierMaster.StateId, M_SupplierMaster.CountryId,       
                         M_SupplierMaster.CreditPeriod, M_SupplierMaster.Mobile, M_SupplierMaster.Phone, M_SupplierMaster.Fax, M_SupplierMaster.Email, M_SupplierMaster.ModeOfPayment, M_SupplierMaster.TermOfPayment,       
                         M_SupplierMaster.TaxNature, M_SupplierMaster.CurrencyId, M_SupplierMaster.Octroi, M_SupplierMaster.Freight, M_SupplierMaster.IsDeleted, M_SupplierMaster.AddedBy, M_SupplierMaster.UpdatedBy,       
                         M_CityMaster.CityName, M_StateMaster.StateName, M_CountryMaster.CountryName, M_AssignSupplierToStore.StoreId, M_SupplierMaster.GSTNo, M_SupplierMaster.PanNo      
FROM            M_SupplierMaster INNER JOIN      
                         M_CityMaster ON M_SupplierMaster.CityId = M_CityMaster.CityId INNER JOIN      
                         M_CountryMaster ON M_SupplierMaster.CountryId = M_CountryMaster.CountryId INNER JOIN      
                         M_StateMaster ON M_SupplierMaster.StateId = M_StateMaster.StateId INNER JOIN      
                         M_AssignSupplierToStore ON M_SupplierMaster.SupplierId = dbo.M_AssignSupplierToStore.SupplierId      
WHERE        (M_SupplierMaster.SupplierName LIKE COALESCE (@SupplierName, M_SupplierMaster.SupplierName)) AND (M_AssignSupplierToStore.StoreId LIKE COALESCE (@StoreID, M_AssignSupplierToStore.StoreId))      
order by SupplierId desc    
 OFFSET (@Start*@Length)+0 ROWS                    
    FETCH NEXT @Length ROWS ONLY          
End 


Create SP--->[m_Rtrv_Rolemaster]

CREATE PROCEDURE [dbo].[m_Rtrv_Rolemaster]    
(    
@RoleName [nvarchar](250),    
@Start INT,                
@Length INT      
)    
as    
SELECT COUNT(*) total_row     
FROM RoleMaster    
 WHERE IsActive=1 AND RoleName LIKE '%'+@RoleName+'%'    
SELECT dbo.Rolemaster.RoleId,dbo.Rolemaster.RoleName,IsActive    
 FROM RoleMaster    
 WHERE IsActive=1 AND RoleName LIKE '%'+@RoleName+'%'    
 ORDER BY dbo.Rolemaster.RoleId DESC    
  OFFSET (@Start*@Length)+0 ROWS            
  FETCH NEXT @Length ROWS ONLY 

Create SP-->  [m_Rtrv_RadilogyResultEntryList_Ptnt_Dtls] 
                 
CREATE PROCEDURE [dbo].[m_Rtrv_RadilogyResultEntryList_Ptnt_Dtls]                                                                
(                                                
 @F_Name     [nvarchar](50),                                                          
 @L_Name     [nvarchar](50),                                                        
 @Reg_No     [bigint],                                                        
 @From_Dt    [DateTime],                                                           
 @To_Dt      [DateTime],                                            
 @IsCompleted [tinyint],                                                      
 @OP_IP_Type [tinyint],                
 @CategoryId [bigint],      
@Start INT,      
@Length INT                                                            
 )                                                      
AS                                                     
                                                
IF @F_Name = '%'                                                          
 SET @F_Name = NULL                                                          
                                                           
IF @L_Name = '%'                                                          
 SET @L_Name = NULL                                                          
                                                           
IF @Reg_No = 0                                                          
 SET @Reg_No = NULL                                                          
                                                       
IF @From_Dt ='01/01/1900'                                                          
 SET @From_Dt = NULL                                                          
                                                           
IF @To_Dt = '01/01/1900'                                                        
 SET @To_Dt = NULL               
               
IF @CategoryId = 0                                                          
 SET @CategoryId = NULL                                                             
                                           
If     @OP_IP_Type = 0                                                       
Begin                 
  select count(*) total_row      
  From T_RadiologyReportHeader      
  Where (dbo.T_RadiologyReportHeader.OPD_IPD_Type = 0) AND (dbo.T_RadiologyReportHeader.RadDate BETWEEN COALESCE (@From_Dt, dbo.T_RadiologyReportHeader.RadDate) AND                 
                      COALESCE (@To_Dt, dbo.T_RadiologyReportHeader.RadDate))            
      
  SELECT  distinct   dbo.T_RadiologyReportHeader.RadReportId,               
      CONVERT(Varchar(11), dbo.T_RadiologyReportHeader.RadDate, 103) AS RadDate,              
         dbo.T_RadiologyReportHeader.RadTime,                 
         dbo.VisitDetails.VisitId AS Visit_Adm_ID, dbo.Registration.RegNo,                 
         dbo.DB_PrefixMaster.PrefixName + ' ' + dbo.Registration.FirstName + ' ' + dbo.Registration.MiddleName + ' ' + dbo.Registration.LastName AS PatientName,                 
         dbo.DB_GenderMaster.GenderName, 'Dr.' + ' ' + dbo.DoctorMaster.FirstName + ' ' + dbo.DoctorMaster.LastName AS ConsultantDoctor, dbo.VisitDetails.VisitDate,                 
         dbo.VisitDetails.VisitTime, dbo.M_RadiologyTestMaster.TestName, dbo.Bill.OPD_IPD_Type as opdipdtype, dbo.Bill.PBillNo, dbo.ServiceMaster.ServiceName,                 
         dbo.T_RadiologyReportHeader.IsCompleted, dbo.T_RadiologyReportHeader.IsPrinted, dbo.VisitDetails.OPDNo AS OP_IP_Number,                 
         dbo.T_RadiologyReportHeader.RadTestID, dbo.M_RadiologyTestMaster.TestId, dbo.T_RadiologyReportHeader.ChargeId,                 
         dbo.M_Radiology_CategoryMaster.CategoryName, dbo.T_RadiologyReportHeader.OPD_IPD_ID as opdipdid,'OP' AS PatientType, dbo.Registration.AgeYear                
  FROM         dbo.M_Radiology_CategoryMaster INNER JOIN                
         dbo.M_RadiologyTestMaster ON dbo.M_Radiology_CategoryMaster.CategoryId = dbo.M_RadiologyTestMaster.CategoryId RIGHT OUTER JOIN                
         dbo.ServiceMaster INNER JOIN                
         dbo.T_RadiologyReportHeader LEFT OUTER JOIN                
         dbo.Registration INNER JOIN                
         dbo.VisitDetails ON dbo.Registration.RegId = dbo.VisitDetails.RegID INNER JOIN                
         dbo.DB_PrefixMaster ON dbo.Registration.PrefixId = dbo.DB_PrefixMaster.PrefixID INNER JOIN          
         dbo.DB_GenderMaster ON dbo.Registration.GenderId = dbo.DB_GenderMaster.GenderId INNER JOIN                
         dbo.Bill ON dbo.VisitDetails.VisitId = dbo.Bill.OPD_IPD_ID INNER JOIN             
         dbo.BillDetails ON dbo.Bill.BillNo = dbo.BillDetails.BillNo INNER JOIN                
    dbo.AddCharges ON dbo.BillDetails.ChargesID = dbo.AddCharges.ChargesId ON dbo.T_RadiologyReportHeader.ChargeId = dbo.AddCharges.ChargesId AND                 
         dbo.T_RadiologyReportHeader.OPD_IPD_ID = dbo.VisitDetails.VisitId ON dbo.ServiceMaster.ServiceId = dbo.AddCharges.ServiceId INNER JOIN                
         dbo.DoctorMaster ON dbo.VisitDetails.ConsultantDocId = dbo.DoctorMaster.DoctorId ON                 
         dbo.M_RadiologyTestMaster.ServiceId = dbo.T_RadiologyReportHeader.RadTestID                
  WHERE     (dbo.Bill.OPD_IPD_Type = 0) AND (dbo.T_RadiologyReportHeader.RadDate BETWEEN COALESCE (@From_Dt, dbo.T_RadiologyReportHeader.RadDate) AND                 
         COALESCE (@To_Dt, dbo.T_RadiologyReportHeader.RadDate)) AND (dbo.Registration.FirstName LIKE COALESCE (@F_Name, dbo.Registration.FirstName)) AND                 
         (dbo.Registration.LastName LIKE COALESCE (@L_Name, dbo.Registration.LastName)) AND (dbo.Registration.RegNo = COALESCE (@Reg_No,                 
         dbo.Registration.RegNo)) AND (dbo.T_RadiologyReportHeader.IsCompleted = COALESCE (@IsCompleted, dbo.T_RadiologyReportHeader.IsCompleted)) AND                 
         (dbo.T_RadiologyReportHeader.OPD_IPD_Type = 0) AND (dbo.T_RadiologyReportHeader.IsCancelled = 0)              
         -- AND (dbo.M_RadiologyTestMaster.CategoryId = COALESCE (@CategoryId, dbo.M_RadiologyTestMaster.CategoryId))               
       --and dbo.Bill.PBillNo is null         
  Order by dbo.T_RadiologyReportHeader.RadReportId desc      
  OFFSET (@Start*@Length)+0 ROWS                            
  FETCH NEXT @Length ROWS ONLY       
End                    
Else If   @OP_IP_Type = 1                                          
     Begin                                
    select count(*) total_row      
    From T_RadiologyReportHeader      
    Where (dbo.T_RadiologyReportHeader.OPD_IPD_Type = 1)       
    AND (dbo.T_RadiologyReportHeader.RadDate BETWEEN COALESCE (@From_Dt, dbo.T_RadiologyReportHeader.RadDate) AND COALESCE (@To_Dt, dbo.T_RadiologyReportHeader.RadDate))            
      
  SELECT     dbo.T_RadiologyReportHeader.RadReportId,  CONVERT(Varchar(11), dbo.T_RadiologyReportHeader.RadDate, 103) AS RadDate, dbo.T_RadiologyReportHeader.RadTime,                 
         dbo.Admission.AdmissionID AS Visit_Adm_ID, dbo.Registration.RegNo,                 
         dbo.DB_PrefixMaster.PrefixName + ' ' + dbo.Registration.FirstName + ' ' + dbo.Registration.MiddleName + ' ' + dbo.Registration.LastName AS PatientName,                 
         dbo.DB_GenderMaster.GenderName, 'Dr.' + ' ' + dbo.DoctorMaster.FirstName + ' ' + dbo.DoctorMaster.LastName AS ConsultantDoctor,                 
         isnull(dbo.M_RadiologyTestMaster.TestName,'')  as TestName,               
         dbo.Bill.OPD_IPD_Type as opdipdtype, dbo.Bill.PBillNo, dbo.ServiceMaster.ServiceName, dbo.T_RadiologyReportHeader.IsCompleted,                 
         dbo.T_RadiologyReportHeader.IsPrinted,               
         dbo.T_RadiologyReportHeader.RadTestID,               
          isnull(dbo.M_RadiologyTestMaster.TestId,0) as TestId,               
         dbo.T_RadiologyReportHeader.ChargeId,                 
         isnull(dbo.M_Radiology_CategoryMaster.CategoryName,'') as CategoryName,               
         dbo.T_RadiologyReportHeader.IsCancelled, dbo.Admission.AdmissionDate, dbo.Admission.AdmissionTime,                 
         dbo.Admission.IPDNo AS OP_IP_Number, dbo.T_RadiologyReportHeader.OPD_IPD_ID as opdipdid, 'IP' AS PatientType, dbo.Registration.AgeYear                 
  FROM         dbo.ServiceMaster INNER JOIN                
         dbo.AddCharges ON dbo.ServiceMaster.ServiceId = dbo.AddCharges.ServiceId LEFT OUTER JOIN                
         dbo.BillDetails INNER JOIN                
         dbo.Bill ON dbo.BillDetails.BillNo = dbo.Bill.BillNo ON dbo.AddCharges.ChargesId = dbo.BillDetails.ChargesID LEFT OUTER JOIN                
         dbo.M_Radiology_CategoryMaster INNER JOIN                
         dbo.M_RadiologyTestMaster ON dbo.M_Radiology_CategoryMaster.CategoryId = dbo.M_RadiologyTestMaster.CategoryId RIGHT OUTER JOIN                
         dbo.T_RadiologyReportHeader INNER JOIN                
         dbo.Admission INNER JOIN                
         dbo.DB_PrefixMaster INNER JOIN                
         dbo.Registration ON dbo.DB_PrefixMaster.PrefixID = dbo.Registration.PrefixId INNER JOIN                
         dbo.DB_GenderMaster ON dbo.Registration.GenderId = dbo.DB_GenderMaster.GenderId ON dbo.Admission.RegID = dbo.Registration.RegId INNER JOIN                
      dbo.DoctorMaster ON dbo.Admission.DocNameID = dbo.DoctorMaster.DoctorId ON dbo.T_RadiologyReportHeader.OPD_IPD_ID = dbo.Admission.AdmissionID ON                 
        dbo.M_RadiologyTestMaster.ServiceId = dbo.T_RadiologyReportHeader.RadTestID ON dbo.AddCharges.ChargesId = dbo.T_RadiologyReportHeader.ChargeId                
  WHERE     (dbo.T_RadiologyReportHeader.RadDate BETWEEN COALESCE (@From_Dt, dbo.T_RadiologyReportHeader.RadDate) AND COALESCE (@To_Dt,                 
         dbo.T_RadiologyReportHeader.RadDate)) AND (dbo.Registration.FirstName LIKE COALESCE (@F_Name, dbo.Registration.FirstName)) AND                 
         (dbo.Registration.LastName LIKE COALESCE (@L_Name, dbo.Registration.LastName)) AND (dbo.Registration.RegNo = COALESCE (@Reg_No,                 
         dbo.Registration.RegNo)) AND (dbo.T_RadiologyReportHeader.IsCompleted = COALESCE (@IsCompleted, dbo.T_RadiologyReportHeader.IsCompleted)) AND                 
         (dbo.T_RadiologyReportHeader.OPD_IPD_Type = 1) AND (dbo.T_RadiologyReportHeader.IsCancelled = 0)                
         -- AND (dbo.M_RadiologyTestMaster.CategoryId = COALESCE (@CategoryId, dbo.M_RadiologyTestMaster.CategoryId))                
          --and dbo.Bill.PBillNo is null                              
  Order by dbo.T_RadiologyReportHeader.RadReportId desc      
  OFFSET (@Start*@Length)+0 ROWS                            
  FETCH NEXT @Length ROWS ONLY       
End      
else                                           
                  
SELECT     dbo.T_RadiologyReportHeader.RadReportId,  CONVERT(Varchar(11), dbo.T_RadiologyReportHeader.RadDate, 103) AS RadDate, dbo.T_RadiologyReportHeader.RadTime,                 
                      dbo.VisitDetails.VisitId AS Visit_Adm_ID, dbo.Registration.RegNo,                 
                      dbo.DB_PrefixMaster.PrefixName + ' ' + dbo.Registration.FirstName + ' ' + dbo.Registration.MiddleName + ' ' + dbo.Registration.LastName AS PatientName,                 
                      dbo.DB_GenderMaster.GenderName, 'Dr.' + ' ' + dbo.DoctorMaster.FirstName + ' ' + dbo.DoctorMaster.LastName AS ConsultantDoctor,                 
                      dbo.M_RadiologyTestMaster.TestName, dbo.Bill.OPD_IPD_Type as opdipdtype, dbo.Bill.PBillNo, dbo.ServiceMaster.ServiceName, dbo.T_RadiologyReportHeader.IsCompleted,          
                      dbo.T_RadiologyReportHeader.IsPrinted, dbo.VisitDetails.OPDNo AS OP_IP_Number, dbo.T_RadiologyReportHeader.RadTestID, dbo.M_RadiologyTestMaster.TestId,                 
                      dbo.T_RadiologyReportHeader.ChargeId, dbo.M_Radiology_CategoryMaster.CategoryName, dbo.T_RadiologyReportHeader.OPD_IPD_ID as opdipdid, 'OP' AS PatientType,                 
                      dbo.Registration.AgeYear                
FROM         dbo.M_Radiology_CategoryMaster INNER JOIN                
                      dbo.M_RadiologyTestMaster ON dbo.M_Radiology_CategoryMaster.CategoryId = dbo.M_RadiologyTestMaster.CategoryId RIGHT OUTER JOIN                
                      dbo.T_RadiologyReportHeader INNER JOIN                
                      dbo.VisitDetails ON dbo.T_RadiologyReportHeader.OPD_IPD_ID = dbo.VisitDetails.VisitId INNER JOIN                
                      dbo.Registration ON dbo.VisitDetails.RegID = dbo.Registration.RegId INNER JOIN                
                      dbo.DB_PrefixMaster ON dbo.Registration.PrefixId = dbo.DB_PrefixMaster.PrefixID INNER JOIN                
                      dbo.DB_GenderMaster ON dbo.Registration.GenderId = dbo.DB_GenderMaster.GenderId INNER JOIN                
                      dbo.Bill ON dbo.VisitDetails.VisitId = dbo.Bill.OPD_IPD_ID INNER JOIN              
                      dbo.BillDetails ON dbo.Bill.BillNo = dbo.BillDetails.BillNo INNER JOIN                
                      dbo.AddCharges ON dbo.BillDetails.ChargesID = dbo.AddCharges.ChargesId AND dbo.T_RadiologyReportHeader.ChargeId = dbo.AddCharges.ChargesId INNER JOIN                
                      dbo.ServiceMaster ON dbo.AddCharges.ServiceId = dbo.ServiceMaster.ServiceId INNER JOIN                
                      dbo.DoctorMaster ON dbo.VisitDetails.ConsultantDocId = dbo.DoctorMaster.DoctorId ON                 
                      dbo.M_RadiologyTestMaster.ServiceId = dbo.T_RadiologyReportHeader.RadTestID                
WHERE     (dbo.T_RadiologyReportHeader.RadDate BETWEEN COALESCE (@From_Dt, dbo.T_RadiologyReportHeader.RadDate) AND COALESCE (@To_Dt,                 
                      dbo.T_RadiologyReportHeader.RadDate)) AND (dbo.Registration.FirstName LIKE COALESCE (@F_Name, dbo.Registration.FirstName)) AND                 
 (dbo.Registration.LastName LIKE COALESCE (@L_Name, dbo.Registration.LastName)) AND (dbo.Registration.RegNo = COALESCE (@Reg_No,                 
                      dbo.Registration.RegNo)) AND (dbo.T_RadiologyReportHeader.IsCompleted = COALESCE (@IsCompleted, dbo.T_RadiologyReportHeader.IsCompleted)) AND                 
                      (dbo.T_RadiologyReportHeader.IsCancelled = 0) AND (dbo.Bill.OPD_IPD_Type = 0)                  
                      -- AND (dbo.M_RadiologyTestMaster.CategoryId = COALESCE (@CategoryId, dbo.M_RadiologyTestMaster.CategoryId))               
                       --and dbo.Bill.PBillNo is null                 
                   
 union all                  
                   
 SELECT     dbo.T_RadiologyReportHeader.RadReportId,  CONVERT(Varchar(11), dbo.T_RadiologyReportHeader.RadDate, 103) AS RadDate, dbo.T_RadiologyReportHeader.RadTime,                 
                      dbo.Admission.AdmissionID AS Visit_Adm_ID, dbo.Registration.RegNo,                 
                      dbo.DB_PrefixMaster.PrefixName + ' ' + dbo.Registration.FirstName + ' ' + dbo.Registration.MiddleName + ' ' + dbo.Registration.LastName AS PatientName,                 
                      dbo.DB_GenderMaster.GenderName, 'Dr.' + ' ' + dbo.DoctorMaster.FirstName + ' ' + dbo.DoctorMaster.LastName AS ConsultantDoctor,                 
                      dbo.M_RadiologyTestMaster.TestName, dbo.Bill.OPD_IPD_Type as opdipdtype, dbo.Bill.PBillNo, dbo.ServiceMaster.ServiceName, dbo.T_RadiologyReportHeader.IsCompleted,                 
                      dbo.T_RadiologyReportHeader.IsPrinted, dbo.Admission.IPDNo AS OP_IP_Number, dbo.T_RadiologyReportHeader.RadTestID, dbo.M_RadiologyTestMaster.TestId,                 
                      dbo.T_RadiologyReportHeader.ChargeId, dbo.M_Radiology_CategoryMaster.CategoryName, dbo.T_RadiologyReportHeader.OPD_IPD_ID as opdipdid, 'IP' AS PatientType,                 
                      dbo.Registration.AgeYear                
FROM         dbo.ServiceMaster INNER JOIN                
                      dbo.AddCharges ON dbo.ServiceMaster.ServiceId = dbo.AddCharges.ServiceId LEFT OUTER JOIN                
                      dbo.BillDetails INNER JOIN                
                      dbo.Bill ON dbo.BillDetails.BillNo = dbo.Bill.BillNo ON dbo.AddCharges.ChargesId = dbo.BillDetails.ChargesID LEFT OUTER JOIN                
                      dbo.M_Radiology_CategoryMaster INNER JOIN                
                      dbo.M_RadiologyTestMaster ON dbo.M_Radiology_CategoryMaster.CategoryId = dbo.M_RadiologyTestMaster.CategoryId RIGHT OUTER JOIN                
                      dbo.T_RadiologyReportHeader INNER JOIN                
                      dbo.Admission INNER JOIN                
                      dbo.DB_PrefixMaster INNER JOIN                
                      dbo.Registration ON dbo.DB_PrefixMaster.PrefixID = dbo.Registration.PrefixId INNER JOIN                
                      dbo.DB_GenderMaster ON dbo.Registration.GenderId = dbo.DB_GenderMaster.GenderId ON dbo.Admission.RegID = dbo.Registration.RegId INNER JOIN                
                      dbo.DoctorMaster ON dbo.Admission.DocNameID = dbo.DoctorMaster.DoctorId ON dbo.T_RadiologyReportHeader.OPD_IPD_ID = dbo.Admission.AdmissionID ON                 
                      dbo.M_RadiologyTestMaster.ServiceId = dbo.T_RadiologyReportHeader.RadTestID ON dbo.AddCharges.ChargesId = dbo.T_RadiologyReportHeader.ChargeId                
WHERE     (dbo.T_RadiologyReportHeader.RadDate BETWEEN COALESCE (@From_Dt, dbo.T_RadiologyReportHeader.RadDate) AND COALESCE (@To_Dt,                 
                      dbo.T_RadiologyReportHeader.RadDate)) AND (dbo.Registration.FirstName LIKE COALESCE (@F_Name, dbo.Registration.FirstName)) AND                 
                      (dbo.Registration.LastName LIKE COALESCE (@L_Name, dbo.Registration.LastName)) AND (dbo.Registration.RegNo = COALESCE (@Reg_No,                 
                      dbo.Registration.RegNo)) AND (dbo.T_RadiologyReportHeader.IsCompleted = COALESCE (@IsCompleted, dbo.T_RadiologyReportHeader.IsCompleted)) AND                 
                      (dbo.T_RadiologyReportHeader.IsCancelled = 0)  AND (dbo.Bill.OPD_IPD_Type = 1)                   
                   --    AND (dbo.M_RadiologyTestMaster.CategoryId = COALESCE (@CategoryId, dbo.M_RadiologyTestMaster.CategoryId))               
                       --and dbo.Bill.PBillNo is null       
Order by dbo.T_RadiologyReportHeader.RadReportId desc      
OFFSET (@Start*@Length)+0 ROWS                            
FETCH NEXT @Length ROWS ONLY 


Create SP--> [Ps_Rtrv_PathologyTestList]  

  
Create proc [dbo].[Ps_Rtrv_PathologyTestList]                    
(                    
 @ServiceName   [nvarchar](100),         
 @Start INT,        
 @Length INT        
)                    
as                     
                    
IF @ServiceName = '%'                          
 SET @ServiceName = NULL         
       
   select count(*) total_row        
   FROM     dbo.M_PathTestMaster INNER JOIN          
                  dbo.M_PathCategoryMaster ON dbo.M_PathTestMaster.CategoryId = dbo.M_PathCategoryMaster.CategoryId LEFT OUTER JOIN          
                  dbo.ServiceMaster ON dbo.M_PathTestMaster.ServiceID = dbo.ServiceMaster.ServiceId               
      WHERE      (dbo.M_PathTestMaster.TestName LIKE COALESCE (@ServiceName, dbo.M_PathTestMaster.TestName))                 
      
SELECT dbo.M_PathTestMaster.TestId, dbo.M_PathTestMaster.TestName, dbo.M_PathTestMaster.PrintTestName, dbo.M_PathCategoryMaster.CategoryId, dbo.M_PathTestMaster.IsSubTest, dbo.M_PathTestMaster.TechniqueName,           
                  dbo.M_PathTestMaster.MachineName, dbo.M_PathTestMaster.SuggestionNote, dbo.M_PathTestMaster.FootNote, dbo.M_PathTestMaster.AddedBy, dbo.M_PathCategoryMaster.CategoryName,           
                  dbo.M_PathTestMaster.ServiceID, dbo.M_PathTestMaster.IsTemplateTest, dbo.ServiceMaster.ServiceName,dbo.M_PathTestMaster.IsActive          
FROM     dbo.M_PathTestMaster INNER JOIN          
                  dbo.M_PathCategoryMaster ON dbo.M_PathTestMaster.CategoryId = dbo.M_PathCategoryMaster.CategoryId LEFT OUTER JOIN          
                  dbo.ServiceMaster ON dbo.M_PathTestMaster.ServiceID = dbo.ServiceMaster.ServiceId               
WHERE      (dbo.M_PathTestMaster.TestName LIKE COALESCE (@ServiceName, dbo.M_PathTestMaster.TestName))                 
    ORDER BY dbo.M_PathTestMaster.TestId        
     OFFSET @Start ROWS   
    FETCH NEXT @Length ROWS ONLY;


Alter sp--> [Retrieve_BrowseOPDPaymentReceipt]---> Add start and Length
 Alter SP --> [Rtrv_LabOrRadRequestList]--> Add start and Length
alter SP-->[m_Rtrv_PathParameterMaster_by_Name] ---> Add start and Length alter column is deleted

---------------------------------------------------- -----********* ----------------------------------------------------------

ALTER TABLE M_CurrencyMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

ALTER TABLE M_ItemTypeMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
 
ALTER TABLE M_ItemCategoryMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
 
ALTER TABLE M_ItemgenericNameMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
 
 
ALTER TABLE M_ItemClassMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
 
go
 
ALTER TABLE M_ManuFactureMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL 
go
 
ALTER TABLE M_StoreMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
 
ALTER TABLE M_itemmaster ADD [ItemTime][datetime] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
 
ALTER TABLE M_SupplierMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL,[SupplierTime] [datetime] NULL

go
 
ALTER TABLE M_TaxNatureMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL

go
 
ALTER TABLE M_ModeOfpayment ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL

go
 
ALTER TABLE M_TermsOfPaymentMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL

go
 
ALTER TABLE Refund ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL,[AddedBy] [int] NULL
go

 
ALTER TABLE M_UnitOfMeasurementMaster ADD [IsActive] [bit] NULL,[CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go

 
ALTER TABLE M_Radiology_Categorymaster ADD [IsActive] [bit] NULL, [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go


ALTER TABLE M_ClassMaster ADD [CreatedBy] [int] NULL,[CreatedDate] [datetime] NULL,[ModifiedBy] [int] NULL,[ModifiedDate] [datetime] NULL
go
	

Update  M_CurrencyMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

Update  M_ItemTypeMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

Update  M_ItemCategoryMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

Update  M_ItemgenericNameMaster set IsActive=1, CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

Update  M_ItemClassMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

Update  M_ManuFactureMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

Update  M_StoreMaster set IsActive=1, CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

Update  M_itemmaster set ItemTime=getdate(),CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

Update  M_SupplierMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate(),SupplierTime=getdate()

Update  M_TaxNatureMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

Update  M_ModeOfpayment set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

Update  M_TermsOfPaymentMaster set IsActive=1,CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

Update  Refund set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate(),AddedBy=1
Update  M_UnitOfMeasurementMaster set IsActive=1, CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update  M_Radiology_Categorymaster set IsActive=1, CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()
Update M_ClassMaster set CreatedBy=1, CreatedDate=getdate(),ModifiedBy=1,ModifiedDate=getdate()

-----------------------------------------------------------------------------------------------

ALTER TABLE M_PathunitMaster DROP COLUMN Isdeleted;
ALTER TABLE M_RadiologyTestMaster DROP COLUMN Isdeleted;
ALTER TABLE M_PathParameterMaster DROP COLUMN Isdeleted;
ALTER TABLE M_CurrencyMaster DROP COLUMN Isdeleted;
 
ALTER TABLE M_ManufactureMaster DROP COLUMN Isdeleted;  db command pending
 
 

 
 
 
 
 
 






















































---------------------------------------------------- Meshram ----------------------------------------------------------




ALTER TABLE T_PathologyReportTemplateDetails

ADD SuggestionNotes nvarchar(500);


ALTER TABLE T_PathologyReportTemplateDetails

ADD PathResultDr1 bigint;
