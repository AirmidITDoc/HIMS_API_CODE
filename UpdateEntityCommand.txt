Scaffold-DbContext "Data Source=192.168.2.200;Initial Catalog=SSWeb_AIRMID;Persist Security Info=True;User ID=DEV001;Password=DEV001;MultipleActiveResultSets=True;Max Pool Size=5000;" Microsoft.EntityFrameworkCore.SqlServer -o Models -force -project HIMS.Data -context HIMSDbContext





 ////Edit API
 //[HttpPut("{id:int}")]
 ////[Permission(PageCode = "PatientType", Permission = PagePermission.Edit)]
 //public async Task<ApiResponse> Edit(TestMasterModel obj)
 //{
 //    MPathTestMaster model = obj.MapTo<MPathTestMaster>();
 //    model.IsActive = true;
 //    if (obj.TestId == 0)
 //        return ApiResponseHelper.GenerateResponse(ApiStatusCode.Status500InternalServerError, "Invalid params");
 //    else
 //    {
 //        //model.ModifiedBy = CurrentUserId;
 //        //model.ModifiedDate = DateTime.Now;
 //        await _repository.Update(model, CurrentUserId, CurrentUserName, new string[2] { "CreatedBy", "CreatedDate" });
 //    }
 //    return ApiResponseHelper.GenerateResponse(ApiStatusCode.Status200OK, "Test Name updated successfully.");
 //}



 ////Delete API
 //[HttpDelete]
 ////[Permission(PageCode = "PatientType", Permission = PagePermission.Delete)]
 //public async Task<ApiResponse> delete(int Id)
 //{
 //    MPathTestMaster model = await _repository.GetById(x => x.TestId == Id);
 //    if ((model?.TestId ?? 0) > 0)
 //    {
 //        model.IsActive = false;
 //        //model.ModifiedBy = CurrentUserId;
 //        //model.ModifiedDate = DateTime.Now;
 //        await _repository.SoftDelete(model, CurrentUserId, CurrentUserName);
 //        return ApiResponseHelper.GenerateResponse(ApiStatusCode.Status200OK, " Test Name deleted successfully.");
 //    }
 //    else
 //        return ApiResponseHelper.GenerateResponse(ApiStatusCode.Status500InternalServerError, "Invalid params");
 //}